//Задание 1

var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 - сначала происходит увеличение переменной a на единицу, затем присваивается значение переменной c = 2. После выводится сообщения. Ипользуется префиксная форма инкремента.
d = b++; alert(d);           // 1 - сначала присваивается переменной d значение из переменной b = 1, затем переменная b увеличивается на 1, выводится сообщение. Порядок обусловлен тем, что используется постфиксная форма инкремента.
c = (2 + ++a); alert(c);      // 5 - переменная a увеличивается на единицу и становится = 3, далее происходит операция сложения 2 + a = 5, далее происходит вывод сообщения. Порядок обусловлен префиксной формой инкремента, и приоритетностью операций, унарные операторы имеют большую приоритетность перед сложением.
d = (2 + b++); alert(d);      // 4 - происходит операция 2 + b = 4, b равно 2, так как ранее перменная b была увеличена на 1 с помощью инкремента. Переменная d = 4, а переменная  b увеличивается на 1 и = 3, из за постфиксной формой инкремента. Выводится сообщение.
alert(a);                    // 3 - такое зачение из-за того, что ранее переменная a была даважды увеличена на 1 с помощью префиксного инкремента.
alert(b);                    // 3 - такое зачение из-за того, что ранее переменная b была даважды увеличена на 1 с помощью постфиксного инкремента.

//Задание 2
var a = 2;
var x = 1 + (a *= 2);
//Переменная x = 5, a = 4. a *= 2 равнозначно переменной a присвается значение 2*2, то есть 4, далее происходит операция 1 + 4, и переменная x = 5.


//Задание 3
var a = -4, b = -8;

if (a >= 0 && b >= 0) {
    alert("Разность - " + (a - b));
} else if (a < 0 && b < 0) {
    alert("Произведение - " + (a * b));
} else if (a >= 0 && b < 0 || a < 0 && b >= 0) {
    alert("Сумма - " + (a + b));
}

//Задание 4

var a = parseInt(Math.random() * 16);

switch (a) {
    case 0:
        alert(a + "<br>");
        a++;

    case 1:
        alert(a + "<br>");
        a++;

    case 2:
        alert(a + "<br>");
        a++;

    case 3:
        alert(a + "<br>");
        a++;

    case 4:
        alert(a + "<br>");
        a++;

    case 5:
        alert(a + "<br>");
        a++;

    case 6:
        alert(a + "<br>");
        a++;

    case 7:
        alert(a + "<br>");
        a++;

    case 8:
        alert(a + "<br>");
        a++;

    case 9:
        alert(a + "<br>");
        a++;

    case 10:
        alert(a + "<br>");
        a++;

    case 11:
        alert(a + "<br>");
        a++;

    case 12:
        alert(a + "<br>");
        a++;

    case 13:
        alert(a + "<br>");
        a++;

    case 14:
        alert(a + "<br>");
        a++;

    case 15:
        alert(a);
        break;
}


//Задание 5
function sum(a, b) {
    alert("Сложение: " + (a + b));
    return a + b;
}

function subtraction(a, b) {
    alert("Вычитание: " + (a - b));
    return a - b;
}

function multi(a, b) {
    alert("Умножение: " + (a * b));
    return a * b;
}

function split(a, b) {
    if (b == 0) {
        alert("Делить на 0 нельзя");
        return;
    }
    alert("Деление: " + (a / b));
    return a / b;
}


//Задание 6

function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case "+":
            return sum(arg1, arg2);
        case "-":
            return subtraction(arg1, arg2);
        case "*":
            return multi(arg1, arg2);
        case "/":
            return split(arg1, arg2);
        default:
            alert("Некорретный оператор");
            return;
    }
}


//Задание 7
//Cравниваются разные типы данных. null согласно команде typeOf относится к типу объект, null это отдельный тип данных, который обозначает "ничего". А 0 может быть представлено в двух типах данных: числовом и строковом. С 0 можно произвести конкатенацию. При сравнении null и 0 результат -  false, потому что "ничего"  и число 0 не равнозначные значения. При нестрогом сравнении null и undefined вовзращается true.


//Задание 8
function power(val, pow) {
    if (pow === 1) {
        return val;
    }
    return val * power(val, pow - 1);
}
alert(power(2, 3));